/*!
 * jQuery.ellipsis
 * http://github.com/jjenzz/jquery.ellipsis
 * --------------------------------------------------------------------------
 * Copyright (c) 2013 J. Smith (@jjenzz)
 * Dual licensed under the MIT and GPL licenses:
 * http://www.opensource.org/licenses/mit-license.php
 * http://www.gnu.org/licenses/gpl.html
 *
 * adds a class to the last 'allowed' line of text so you can apply
 * text-overflow: ellipsis;
 */
!function(factory){"use strict";"function"==typeof define&&define.amd?define(["jquery"],factory):factory(jQuery)}((function($){"use strict";var namespace="ellipsis",span='<span style="white-space: nowrap;">',defaults={lines:"auto",ellipClass:"ellip",responsive:!1};function Ellipsis(el,opts){var base=this,currLine=0,lines=[],setStartEllipAt,startEllipAt,resizeTimer,currOffset,lineHeight,contHeight,words,htmlEntities,setStartEllipByHeight,setStartEllipByLine;function create(){base.text=base.$cont.text(),base.opts.ellipLineClass=base.opts.ellipClass+"-line",base.$el=$('<span class="'+base.opts.ellipClass+'" />'),base.$el.text(base.text),base.$cont.empty().append(base.$el),init()}function init(){"number"==typeof base.opts.lines&&base.opts.lines<2?base.$el.addClass(base.opts.ellipLineClass):(contHeight=base.$cont.height(),"auto"===base.opts.lines&&base.$el.prop("scrollHeight")<=contHeight||setStartEllipAt&&(words=$.trim(escapeText(base.text)).split(/\s+/),base.$el.html(span+words.join("</span> "+span)+"</span>"),base.$el.find("span").each(setStartEllipAt),null!=startEllipAt&&updateText(startEllipAt),base.opts.responsive&&$(base.$el).css({"max-height":""}).css({"max-height":base.$el.outerHeight(!0)})))}function updateText(nth){words[nth]='<span class="'+base.opts.ellipLineClass+'">'+words[nth],words.push("</span>"),base.$el.html(words.join(" "))}function escapeText(text){return String(text).replace(/[&<>"'``\/]/g,(function(s){return htmlEntities[s]}))}(htmlEntities={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#x27;","`":"&#x60;","/":"&#x2F;","\\":"&#x5C;"},base.$cont=$(el),base.opts=$.extend({},defaults,opts),"auto"===base.opts.lines)&&(setStartEllipAt=function(i,word){var $word=$(word),top=$word.position().top;if(lineHeight=lineHeight||$word.height(),top===currOffset?lines[currLine].push($word):(currOffset=top,lines[currLine+=1]=[$word]),top+lineHeight>contHeight)return startEllipAt=i-lines[currLine-1].length,!1});"number"==typeof base.opts.lines&&base.opts.lines>1&&(setStartEllipAt=function(i,word){var $word,top=$(word).position().top;if(top!==currOffset&&(currOffset=top,currLine+=1),currLine===base.opts.lines)return startEllipAt=i,!1});if(base.opts.responsive){var resize=function(){lines=[],currLine=0,currOffset=null,startEllipAt=null,base.$el.html(escapeText(base.text)),clearTimeout(resizeTimer),resizeTimer=setTimeout(init,100)};$(window).on("resize.ellipsis",resize)}create()}$.fn.ellipsis=function(opts){return this.each((function(){try{$(this).data(namespace,new Ellipsis(this,opts))}catch(err){window.console&&console.error("ellipsis: "+err)}}))}}));