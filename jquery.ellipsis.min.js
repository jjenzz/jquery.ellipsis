/*!
 * jQuery.ellipsis
 * http://github.com/jjenzz/jquery.ellipsis
 * --------------------------------------------------------------------------
 * Copyright (c) 2013 J. Smith (@jjenzz)
 * Dual licensed under the MIT and GPL licenses:
 * http://www.opensource.org/licenses/mit-license.php
 * http://www.gnu.org/licenses/gpl.html
 *
 * adds a class to the last 'allowed' line of text so you can apply
 * text-overflow: ellipsis;
 */
!function(t){"use strict";"function"==typeof define&&define.amd?define(["jquery"],t):t(jQuery)}(function(t){"use strict";function e(e,o){function l(){y.text=y.$cont.text(),y.opts.ellipLineClass=y.opts.ellipClass+"-line",y.$el=t('<span class="'+y.opts.ellipClass+'" />'),y.$el.text(y.text),y.$cont.empty().append(y.$el),p()}function p(){return"number"==typeof y.opts.lines&&y.opts.lines<2?void y.$el.addClass(y.opts.ellipLineClass):($=y.$cont.height(),void("auto"===y.opts.lines&&y.$el.prop("scrollHeight")<=$||c&&(m=t.trim(u(y.text)).split(/\s+/),y.$el.html(s+m.join("</span> "+s)+"</span>"),y.$el.find("span").each(c),null!=f&&a(f))))}function a(t){m[t]='<span class="'+y.opts.ellipLineClass+'">'+m[t],m.push("</span>"),y.$el.html(m.join(" "))}function r(t){return!isNaN(parseFloat(t))}function u(t){return t&&!r(t)?t.replace(/[&<>"']/g,function(t){return x[t]}):t}var c,f,h,d,v,$,m,x,y=this,w=0,C=[];if(x={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#x27;","`":"&#x60;"},y.$cont=t(e),y.opts=t.extend({},i,o),"auto"===y.opts.lines){var g=function(e,n){var s=t(n),i=s.position().top;return v=v||s.height(),i===d?C[w].push(s):(d=i,w+=1,C[w]=[s]),i+v>$?(f=e-C[w-1].length,!1):void 0};c=g}if("number"==typeof y.opts.lines&&y.opts.lines>1){var j=function(e,n){var s=t(n),i=s.position().top;return i!==d&&(d=i,w+=1),w===y.opts.lines?(f=e,!1):void 0};c=j}if(y.opts.responsive){var L=function(){C=[],w=0,d=null,f=null,y.$el.html(u(y.text)),clearTimeout(h),h=setTimeout(p,100)};t(window).on("resize."+n,L)}l()}var n="ellipsis",s='<span style="white-space: nowrap;">',i={lines:"auto",ellipClass:"ellip",responsive:!1};t.fn[n]=function(s){return this.each(function(){try{t(this).data(n,new e(this,s))}catch(i){window.console&&console.error(n+": "+i)}})}});
